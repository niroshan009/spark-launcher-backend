apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-app
  labels:
    app: spring-boot-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-app
  template:
    metadata:
      labels:
        app: spring-boot-app
    spec:
      containers:
        - name: spring-boot-container
          image: niroshan009/spark-launcher-backend:latest  # Replace with your Docker image
          ports:
            - containerPort: 8080  # Replace with the port your Spring Boot app listens on
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          livenessProbe:
            httpGet:
              path: /spark/status
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /spark/status
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-service
  labels:
    app: spring-boot-app
spec:
  type: NodePort  # Can also use LoadBalancer if on a cloud provider
  ports:
    - port: 8080
      targetPort: 8080  # The port in your container
  selector:
    app: spring-boot-app
